[{"/home/elmo/tallerweb/tabla-material-ui/src/index.js":"1","/home/elmo/tallerweb/tabla-material-ui/src/App.js":"2","/home/elmo/tallerweb/tabla-material-ui/src/reportWebVitals.js":"3","/home/elmo/tallerweb/tabla-material-ui/src/views/forms/MyComponent.js":"4","/home/elmo/tallerweb/tabla-material-ui/src/views/forms/PersonasMaterial.js":"5"},{"size":629,"mtime":1634869826845,"results":"6","hashOfConfig":"7"},{"size":528,"mtime":1634860494770,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1634860494771,"results":"9","hashOfConfig":"7"},{"size":4735,"mtime":1634860494771,"results":"10","hashOfConfig":"7"},{"size":6733,"mtime":1634871434978,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tmq7of",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/elmo/tallerweb/tabla-material-ui/src/index.js",["24","25"],"/home/elmo/tallerweb/tabla-material-ui/src/App.js",[],["26","27"],"/home/elmo/tallerweb/tabla-material-ui/src/reportWebVitals.js",[],"/home/elmo/tallerweb/tabla-material-ui/src/views/forms/MyComponent.js",["28","29","30","31"],"import React, {Fragment, useEffect, useState} from 'react';\nimport axios from 'axios';\nimport MaterialDatatable from 'material-datatable';\n\nconst MyComponent = () => {\n    const [nombre, setNombre] = useState(\"\")\n    const [apellido, setApellido] = useState(\"\")\n    const [personas, setPersonas] = useState([])\n    const [id_persona, setId] = useState()\n\n    const handleInputChangeNombre = (event) => {\n        setNombre(event.target.value)\n    }\n\n    const handleInputChangeApellido = (event) => {\n        setApellido(event.target.value)\n    }\n\n    const enviarDatos = () => {\n        console.log(`Enviando datos nombre:${nombre} y apellido:${apellido}`)\n\n        guardarPersona();\n    }\n\n    useEffect(() => {\n        getPersonas()\n    },[])\n    const json = \"\"\n    async function getPersonas(){\n        try{\n            const response = await axios.get('http://192.99.144.232:5000/api/personas?grupo=18')\n            if (response.status == 200){\n                setPersonas(response.data.persona) // Se setea el response json en la variable personas\n            }\n        } catch (error){\n            console.error(error)\n        }\n    }\n\n    const editPersona = (id_persona) => {\n        \n        axios.put(`http://192.99.144.232:5000/api/personas/${id_persona}`, {\n            _id: id_persona,\n            nombre: nombre,\n            apellido: apellido,\n            grupo: 18\n        })\n        .then(function (response){\n            if(response.status == 200){\n                alert(\"Registro modificado con exito\")\n                getPersonas()\n            }\n            else {\n                alert(\"Error al guardar\")\n            }\n        })\n        .catch(function (error){\n            console.log(error)\n        });\n    }\n\n    function guardarPersona(){\n        axios.post('http://192.99.144.232:5000/api/personas', {\n            nombre: nombre,\n            apellido: apellido,\n            grupo: 18 // ver que grupo somos\n        })\n        .then(function (response){\n            if(response.status == 200){\n                alert(\"Registro correcto\")\n                getPersonas()\n            }\n            else {\n                alert(\"Error al guardar\")\n            }\n\n        })\n        .catch(function (error){\n            console.log(error);\n        });\n    }\n\n    const columns = [\n        {\n            name: \"ID\",\n            field: \"_id\",\n            options: {\n                filter: true,\n                sort: true,\n            }\n        },\n        {\n            name: \"Nombre\",\n            field: \"nombre\",\n            options: {\n                filter: true,\n                sort: false,\n            }\n        },\n        {\n            name: \"Apellido\",\n            field: \"apellido\",\n            options: {\n                filter: true,\n                sort: false,\n            }\n        },\n        {\n            name: \"Grupo\",\n            field: \"grupo\",\n            options: {\n                filter: true,\n                sort: false,\n            }\n        },\n    ];\n\n    /*\n    const data1 = [\n        {name: \"Name 1\", title: \"Title 1\", location: \"Location 1\", age: 30, salary: 10},\n        {name: \"Name 2\", title: \"Title 2\", location: \"Location 2\", age: 31, salary: 11},\n    ];\n    */\n    \n\n    const handleRowClick = (rowData, rowMeta) => {\n        console.log(rowData.name);\n        setNombre(rowData.nombre);\n        setApellido(rowData.apellido);\n        setId(rowData._id)\n    };\n\n    const handleInputClean = () => {\n        setNombre('');\n        setApellido('');\n        setId(0);\n    }\n\n    const options = {\n        filterType: 'checkbox',\n        onlyOneRowCanBeSelected: true,\n        onRowClick: handleRowClick\n    };\n\n    return (\n        <Fragment>\n            <h1>FOrmulario</h1>\n            <div>\n                <div>\n                    <input type=\"text\" placeholder=\"Nombre\" name=\"nombre\" onChange={handleInputChangeNombre} value={nombre}></input>\n                </div>\n                <div>\n                    <input type=\"text\" placeholder=\"Apellido\" name=\"apellido\" onChange={handleInputChangeApellido} value={apellido}></input>\n                </div>\n\n                {\n                        id_persona ?\n                        <button onClick={()=>{editPersona(id_persona)}}>Editar</button>\n                        :\n                        <button onClick={enviarDatos}>Enviar</button>\n                        \n                        \n                }\n                <button onClick={handleInputClean}>Limpiar</button>\n            </div>\n            <MaterialDatatable\n            title={\"Miembros de grupo\"}\n            data={personas}\n            columns={columns}\n            options={options}\n            />\n        </Fragment>\n    )\n}\nexport default MyComponent","/home/elmo/tallerweb/tabla-material-ui/src/views/forms/PersonasMaterial.js",["32","33","34","35","36","37","38","39","40","41"],{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":11},{"ruleId":"42","severity":1,"message":"46","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":19},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"42","severity":1,"message":"51","line":28,"column":11,"nodeType":"44","messageId":"45","endLine":28,"endColumn":15},{"ruleId":"52","severity":1,"message":"53","line":32,"column":33,"nodeType":"54","messageId":"55","endLine":32,"endColumn":35},{"ruleId":"52","severity":1,"message":"53","line":49,"column":32,"nodeType":"54","messageId":"55","endLine":49,"endColumn":34},{"ruleId":"52","severity":1,"message":"53","line":69,"column":32,"nodeType":"54","messageId":"55","endLine":69,"endColumn":34},{"ruleId":"42","severity":1,"message":"56","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"57","line":13,"column":11,"nodeType":"44","messageId":"45","endLine":13,"endColumn":19},{"ruleId":"42","severity":1,"message":"58","line":23,"column":11,"nodeType":"44","messageId":"45","endLine":23,"endColumn":22},{"ruleId":"42","severity":1,"message":"51","line":32,"column":11,"nodeType":"44","messageId":"45","endLine":32,"endColumn":15},{"ruleId":"52","severity":1,"message":"53","line":36,"column":33,"nodeType":"54","messageId":"55","endLine":36,"endColumn":35},{"ruleId":"42","severity":1,"message":"59","line":44,"column":11,"nodeType":"44","messageId":"45","endLine":44,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":53,"column":32,"nodeType":"54","messageId":"55","endLine":53,"endColumn":34},{"ruleId":"52","severity":1,"message":"53","line":81,"column":40,"nodeType":"54","messageId":"55","endLine":81,"endColumn":42},{"ruleId":"52","severity":1,"message":"53","line":103,"column":32,"nodeType":"54","messageId":"55","endLine":103,"endColumn":34},{"ruleId":"42","severity":1,"message":"60","line":169,"column":11,"nodeType":"44","messageId":"45","endLine":169,"endColumn":27},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'MyComponent' is defined but never used.","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'json' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Fragment' is defined but never used.","'isMobile' is assigned a value but never used.","'enviarDatos' is assigned a value but never used.","'editPersona' is assigned a value but never used.","'handleInputClean' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]